Assignment:

Title: Simulation and Resolution of Merge Conflict on GitHub

Objective:
To understand the process of creating and resolving merge conflicts on GitHub.

Instructions:

Step 1: Open your GitHub account and navigate to the shared repository provided by the instructor. Ensure that the repository is set to public and accessible to all students.

Step 2: Switch to the "main" branch of the repository.

Step 3: Create a new code file named "Codefile" in the "main" branch. Add the following text to the file:
```
"This is the file to create merge conflict."
```

Step 4: Switch to another branch named "GitBranch_01".

Step 5: Create a new code file named "Codefile" in the "GitBranch_01" branch. Add the following text to the file:
```
"This is the file to create merge conflict.

This file is in another branch!!

We are here to create conflict!!"
```

Step 6: Return to the "main" branch.

Step 7: Create a pull request to merge both branches. Ensure that both branches have a code file with the same name, i.e., "Codefile".

Step 8: Resolve the conflict that arises due to having two different versions of the "Codefile" in separate branches. Merge both branches after resolving the conflict.

Submission:
Submit a report detailing the steps you followed to simulate and resolve the merge conflict. Include screenshots of the GitHub interface at various stages of the process to demonstrate your understanding. Additionally, provide a brief explanation of how you resolved the conflict and merged the branches successfully.

Note:
Ensure that both branches have a code file named "Codefile" with different contents to create a merge conflict. This exercise aims to familiarize you with the common scenario of conflicting changes during collaborative development on GitHub.
